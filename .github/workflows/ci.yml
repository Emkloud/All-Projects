name: CI - Infra PR Checks

on:
  pull_request:
    branches: [ "main" ]
    paths:
      - 'infra/**'
      - '.github/workflows/**'

permissions:
  contents: read
  id-token: write
  pull-requests: write

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform 1.1.9
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.1.9

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION != '' && secrets.AWS_REGION || 'us-east-1' }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Terraform fmt
        run: terraform fmt -check -diff

      - name: Terraform init
        run: terraform init -input=false

      - name: Terraform validate
        run: terraform validate

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4

      - name: TFLint init
        run: tflint --init

      - name: TFLint
        run: tflint -f compact

      - name: tfsec (security scan)
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: infra
          soft_fail: false

      - name: Terraform plan
        id: plan
        env:
          TF_VAR_region: ${{ secrets.AWS_REGION != '' && secrets.AWS_REGION || 'us-east-1' }}
          TF_VAR_project_name: tic-tac-toe
          TF_VAR_profile: ""
        run: |
          terraform plan -no-color -input=false -out=tfplan
          terraform show -no-color tfplan > plan.txt

      - name: Upload plan output
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-output
          path: |
            infra/tfplan
            infra/plan.txt
          if-no-files-found: ignore

      - name: Comment plan to PR
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let body = 'Terraform plan completed. Summary:\n\n';
            try {
              const text = fs.readFileSync('infra/plan.txt', 'utf8');
              const firstLines = text.split('\n').slice(0, 120).join('\n');
              body += '```\n' + firstLines + '\n```\n';
              body += '\nFull artifacts attached to the job (tfplan, plan.txt).';
            } catch (e) {
              body += 'Could not attach plan summary; see workflow logs.';
            }
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });

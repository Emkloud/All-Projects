name: Deploy - Infra Main

on:
  push:
    branches: [ "main" ]
    paths:
      - 'infra/**'
      - '.github/workflows/**'

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: production
    defaults:
      run:
        working-directory: infra
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform 1.1.9
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.1.9

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Terraform init
        run: terraform init -input=false

      - name: Terraform plan
        run: |
          terraform plan -input=false -out=tfplan \
            -var "region=${{ secrets.AWS_REGION }}" \
            -var "project_name=tic-tac-toe" \
            -var "profile="
          terraform show -no-color tfplan > plan.txt

      - name: Upload plan artifacts
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-main
          path: |
            infra/tfplan
            infra/plan.txt

      - name: Apply (auto-approve)
        run: terraform apply -input=false -auto-approve tfplan

      - name: Show outputs
        id: outputs
        run: |
          echo "test_url=$(terraform output -raw test_url)" >> $GITHUB_OUTPUT
          echo "alb_dns_name=$(terraform output -raw alb_dns_name)" >> $GITHUB_OUTPUT

      - name: Job summary
        run: |
          echo "# Deployment complete" >> $GITHUB_STEP_SUMMARY
          echo "- test_url: ${{ steps.outputs.test_url }}" >> $GITHUB_STEP_SUMMARY
          echo "- alb_dns_name: ${{ steps.outputs.alb_dns_name }}" >> $GITHUB_STEP_SUMMARY
